buildscript {
    ext.kotlin_version = '1.2.0'
    ext.jetty_version = '9.4.8.v20171121'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.moowork.node" version "1.2.0"
}

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'java-library-distribution'

group = "net.squarelabs"
version = "0.1." + (System.getenv("TRAVIS_BUILD_NUMBER") ? System.getenv("TRAVIS_BUILD_NUMBER") : 0)

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.postgresql:postgresql:42.1.4'

    compile 'javax.websocket:javax.websocket-api:1.1'

    compile 'org.eclipse.jetty:jetty-server:9.4.8.v20171121'
    compile 'org.eclipse.jetty.websocket:websocket-server:9.4.8.v20171121'
    compile 'org.eclipse.jetty.websocket:websocket-servlet:9.4.8.v20171121'
    compile 'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.4.8.v20171121'
    compile group: 'org.eclipse.jetty.websocket', name: 'websocket-client', version: '9.4.8.v20171121'

    compile group: 'org.flywaydb', name: 'flyway-core', version: '4.2.0'
    compile 'com.github.javafaker:javafaker:0.14'
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.6.1'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    compile group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '1.0.0'
    compile 'io.dropwizard.metrics:metrics-core:4.0.0'
    compile 'io.dropwizard.metrics:metrics-jmx:4.0.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.5.3'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.5.3'
    testCompile('org.seleniumhq.selenium:selenium-remote-driver:3.5.3')
    testCompile('org.seleniumhq.selenium:selenium-api:3.5.3')
    testCompile "org.seleniumhq.selenium:htmlunit-driver:2.27"
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

node {
    download = false
    npmWorkDir = file("${project.buildDir}/npm")
    nodeModulesDir = file("${project.projectDir}/client")
}

clean.doFirst {
    delete "${rootDir}/src/main/resources/static/"
}

task copyResources(type: Copy) {
    from 'client/build/' into 'src/main/resources/static'
}
task setVersion(type: Exec) {
    executable "sh"
    args "-c", "cd client && echo $version && npm version --allow-same-version $version && cd .."
}
npm_run_build.dependsOn setVersion
copyResources.dependsOn npm_run_build

processResources.dependsOn copyResources

test.outputs.upToDateWhen { false }

test {
    testLogging {
        showStandardStreams = true
        showExceptions = true
        showCauses = true
        showStackTraces = true
        showExceptions = true
        displayGranularity = -1
        exceptionFormat = "full"
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': '0.1',
                'Main-Class': 'net.squarelabs.pgrepl.MainKt'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
