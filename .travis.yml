dist: trusty
group: deprecated-2017Q4
language: node_js
node_js:
  - "9.3.0"
sudo: true
env:
  - headless=true
services:
  - postgresql
  - docker
addons:
  chrome: stable
  postgresql: "9.6"
  apt:
    packages:
      - postgresql-server-dev-9.6
before_install:
  - echo "hello world"
  - echo "$TRAVIS_BRANCH"
  - printenv
  - which psql
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl
  - gcloud config set project 'pgrepl-191221'
  - mkdir -p /home/travis/.kube/
  - cp -v ./kube/config /home/travis/.kube/config
  - kubectl config set clusters.gke_pgrepl-191221_us-central1-a_pgrepl-cluster.certificate-authority-data "$KUBE_CLUSTER_CERTIFICATE"
  - kubectl config set users.gke_pgrepl-191221_us-central1-a_pgrepl-cluster.client-certificate-data "$KUBE_CLIENT_CERTIFICATE"
  - kubectl config set users.gke_pgrepl-191221_us-central1-a_pgrepl-cluster.client-key-data "$KUBE_CLIENT_KEY"
  - kubectl proxy &
  - sudo apt-get install postgresql-server-dev-9.6
  - git clone https://github.com/eulerto/wal2json.git
  - cd wal2json && USE_PGXS=1 make && sudo USE_PGXS=1 make install && cd ..
  - ls -l /etc/postgresql/9.6/main/postgresql.conf
  - echo "max_wal_senders = 4" | sudo tee -a /etc/postgresql/9.*/main/postgresql.conf
  - echo "wal_keep_segments = 4" | sudo tee -a /etc/postgresql/9.*/main/postgresql.conf
  - echo "wal_level = logical" | sudo tee -a /etc/postgresql/9.*/main/postgresql.conf
  - echo "max_replication_slots = 4" | sudo tee -a /etc/postgresql/9.*/main/postgresql.conf
  - echo "local replication postgres peer" | sudo tee -a /etc/postgresql/9.6/main/pg_hba.conf
  - echo "host replication postgres 127.0.0.1/32 md5" | sudo tee -a /etc/postgresql/9.6/main/pg_hba.conf
  - echo "host replication postgres ::1/128 md5" | sudo tee -a /etc/postgresql/9.6/main/pg_hba.conf
  - sudo service postgresql restart
install:
  - pwd
  - ls -la
  - wget --quiet http://chromedriver.storage.googleapis.com/2.36/chromedriver_linux64.zip -P ~/
  - unzip ~/chromedriver_linux64.zip -d ~/
  - rm ~/chromedriver_linux64.zip
  - sudo mv -f ~/chromedriver /usr/local/share/
  - sudo chmod +x /usr/local/share/chromedriver
  - sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver
  - npm install -g yarn
  - yarn install
before_script:
  - sudo -u postgres psql -U postgres -d postgres -c "alter user postgres with password 'postgres';"
script:
  - which chromedriver
  - yarn test
after_success:
  - if [ "$TRAVIS_BRANCH" == "master" ]; then
    docker login --username "$DOCKER_USERNAME" --password "$DOCKER_PASSWORD";
    docker build -t bgard6977/pgrepl-db:latest -t bgard6977/pgrepl-db:0.1.$TRAVIS_BUILD_NUMBER -f db.Dockerfile .;
    docker build -t bgard6977/pgrepl-app:latest -t bgard6977/pgrepl-app:0.1.$TRAVIS_BUILD_NUMBER -f app.Dockerfile .;
    docker build -t bgard6977/pgrepl-kafka:latest -t bgard6977/pgrepl-kafka:0.1.$TRAVIS_BUILD_NUMBER -f kafka.Dockerfile .;
    docker push bgard6977/pgrepl-db:0.1.$TRAVIS_BUILD_NUMBER;
    docker push bgard6977/pgrepl-app:0.1.$TRAVIS_BUILD_NUMBER;
    docker push bgard6977/pgrepl-kafka:0.1.$TRAVIS_BUILD_NUMBER;
    docker push bgard6977/pgrepl-db:latest;
    docker push bgard6977/pgrepl-app:latest;
    docker push bgard6977/pgrepl-kafka:latest;
    kubectl apply -f app.yaml;
    kubectl delete pod --all;
    fi
before_cache:
  - echo "before cache"
cache:
  directories:
    - $HOME/.cache/yarn/v1
